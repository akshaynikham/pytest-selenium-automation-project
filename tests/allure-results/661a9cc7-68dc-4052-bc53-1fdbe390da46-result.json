{"name": "test_add_product_to_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d7f23455d38c3875c09890162684079\")>\n\n    @allure.feature('search feature')\n    @allure.story('search for a product')\n    def test_add_product_to_cart(driver):\n        with allure.step('open_amazon_homepage'):\n            open_amazon_homepage(driver)\n        with allure.step('search for product'):\n            search_for_product(driver, \"iphone13+256gb\")\n        print(select_product(driver, \"Apple\"))\n        with allure.step('switch window'):\n            switch_window(driver)\n        with allure.step('add items to cart'):\n>           add_items_to_cart(driver)\n\ntest_search.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\amazon\\add_item_to_cart.py:8: in add_items_to_cart\n    add_to_cart_button = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='add-to-cart-button'][@type='submit']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3d7f23455d38c3875c09890162684079\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000188EE2E53A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\..\\PycharmProjects\\pythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "open_amazon_homepage", "status": "passed", "start": 1718707110645, "stop": 1718707117306}, {"name": "search for product", "status": "passed", "start": 1718707117306, "stop": 1718707136282}, {"name": "switch window", "status": "passed", "start": 1718707140081, "stop": 1718707140135}, {"name": "add items to cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\PRATHIKSHA\\Desktop\\pytest_automation\\pythonProject\\tests\\test_search.py\", line 39, in test_add_product_to_cart\n    add_items_to_cart(driver)\n  File \"C:\\Users\\PRATHIKSHA\\Desktop\\pytest_automation\\pythonProject\\amazon\\add_item_to_cart.py\", line 8, in add_items_to_cart\n    add_to_cart_button = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='add-to-cart-button'][@type='submit']\")))\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\PRATHIKSHA\\PycharmProjects\\pythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1718707140135, "stop": 1718707157900}], "attachments": [{"name": "stdout", "source": "293bc60e-9490-4c4c-8c11-771e491d55da-attachment.txt", "type": "text/plain"}], "start": 1718707110645, "stop": 1718707158046, "uuid": "7ac3fe6b-135c-467f-86cc-3d96f6aa722b", "historyId": "a10285cb4f15276fd47788a59de9e3e9", "testCaseId": "a10285cb4f15276fd47788a59de9e3e9", "fullName": "tests.test_search#test_add_product_to_cart", "labels": [{"name": "feature", "value": "search feature"}, {"name": "story", "value": "search for a product"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_search"}, {"name": "host", "value": "DESKTOP-PESPH7P"}, {"name": "thread", "value": "7576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_search"}]}